# 定义上游服务器
upstream frontend_servers {
    server web-frontend:3000;
}

upstream backend_servers {
    server go-backend:8080;
}

# 服务器配置
server {
    listen 80;
    server_name _;  # 在生产环境中，应替换为您的域名
    
    # 健康检查端点
    location /health {
        access_log off;
        return 200 '{"status":"healthy"}';
        add_header Content-Type application/json;
    }

    # Go后端API直接访问路径（如果需要绕过Next.js API路由）
    location /go-api/ {
        # 去除/go-api前缀，转发到后端的/api
        rewrite ^/go-api/(.*) /api/$1 break;
        proxy_pass http://backend_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # 静态文件缓存
    location /_next/static/ {
        proxy_pass http://frontend_servers;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Host $host;
        proxy_cache_valid 60m;
        add_header Cache-Control "public, max-age=3600, immutable";
        access_log off;
    }

    # Next.js数据路由
    location /_next/data/ {
        proxy_pass http://frontend_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # 所有其他请求（包括/api/）都发送到Next.js前端
    location / {
        proxy_pass http://frontend_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # 限制请求体大小
    client_max_body_size 50m;
} 